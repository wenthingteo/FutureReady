version: '3.8'

services:
  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: futureready-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - futureready-network

  # PostgreSQL database (alternative to Supabase for local development)
  postgres:
    image: postgres:15-alpine
    container_name: futureready-postgres
    environment:
      POSTGRES_DB: futureready
      POSTGRES_USER: futureready_user
      POSTGRES_PASSWORD: futureready_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - futureready-network

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: futureready-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@futureready.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - futureready-network

  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: futureready-backend
    environment:
      NODE_ENV: development
      PORT: 5000
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://futureready_user:futureready_password@postgres:5432/futureready
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - futureready-network
    command: npm run dev

  # Frontend service (optional - can run separately)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: futureready-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:5000
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - futureready-network
    command: npm run dev

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  futureready-network:
    driver: bridge
